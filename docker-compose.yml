

networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - dev

  db:
    image: postgres:12.19
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: VovaF2513
    ports:
      - "5432:5432"
    networks:
      - dev
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.4.2
    container_name: redis_server
    restart: always
    ports:
      - "6379:6379"
    networks:
      - dev
    volumes:
      - redisdata:/data

  backend:
    build:
      context: ./back
    container_name: backend_app
    restart: always
    depends_on:
      - db
      - redis
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://postgres:VovaF2513@host.docker.internal:5432/postgres
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: "434cssfSDFAFSD7FSD67FDS8CVXZ7DSF"
    env_file: .env
    ports:
      - "8000:8000"
    networks:
      - dev
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./migrations:/app/migrations
      - ./.env:/app/.env

  frontend:
    build:
      context: ./front/english-app
    container_name: frontend_app
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - dev

volumes:
  pgdata:
  redisdata:
